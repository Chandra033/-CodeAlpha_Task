<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ðŸ“ˆ Stock Trading Platform</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background: #f8f9fa;
      font-family: 'Segoe UI', sans-serif;
    }
    .card {
      border-radius: 12px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
      margin-bottom: 2rem;
    }
    .table thead {
      background-color: #f1f3f5;
    }
    .text-profit {
      color: green;
    }
    .text-loss {
      color: red;
    }
  </style>
</head>
<body class="p-4">
  <div class="container">
    <h1 class="mb-4 text-center">ðŸ’¹ Simulated Stock Trading Platform</h1>

    <div class="card p-4">
      <h4 class="mb-3">ðŸ§¾ Market Data</h4>
      <div class="table-responsive">
        <table class="table" id="marketTable">
          <thead>
            <tr>
              <th>Symbol</th>
              <th>Company</th>
              <th>Price ($)</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
    </div>

    <div class="card p-4">
      <h4 class="mb-3">ðŸ“Š Your Portfolio</h4>
      <div class="table-responsive">
        <table class="table" id="portfolioTable">
          <thead>
            <tr>
              <th>Symbol</th>
              <th>Shares</th>
              <th>Total Value ($)</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
        <h5 class="mt-3">Total Portfolio Value: $<span id="portfolioValue">0.00</span></h5>
      </div>
    </div>
  </div>

  <script>
    class Stock {
      constructor(symbol, name, price) {
        this.symbol = symbol;
        this.name = name;
        this.price = price;
      }
    }

    class UserPortfolio {
      constructor() {
        this.holdings = JSON.parse(localStorage.getItem('portfolio') || '{}');
      }

      buy(symbol, price) {
        this.holdings[symbol] = (this.holdings[symbol] || 0) + 1;
        this.save();
      }

      getShares(symbol) {
        return this.holdings[symbol] || 0;
      }

      save() {
        localStorage.setItem('portfolio', JSON.stringify(this.holdings));
      }

      totalValue(stocks) {
        return stocks.reduce((total, stock) => {
          return total + (this.getShares(stock.symbol) * stock.price);
        }, 0).toFixed(2);
      }
    }

    const marketData = [
      new Stock('AAPL', 'Apple Inc.', 185.32),
      new Stock('TSLA', 'Tesla Inc.', 245.60),
      new Stock('GOOGL', 'Alphabet Inc.', 128.75),
      new Stock('AMZN', 'Amazon.com Inc.', 134.28)
    ];

    const user = new UserPortfolio();

    function renderMarketTable() {
      const table = document.querySelector('#marketTable tbody');
      table.innerHTML = '';
      marketData.forEach(stock => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${stock.symbol}</td>
          <td>${stock.name}</td>
          <td>${stock.price.toFixed(2)}</td>
          <td><button class="btn btn-sm btn-primary" onclick="buyStock('${stock.symbol}')">Buy</button></td>
        `;
        table.appendChild(row);
      });
    }

    function renderPortfolioTable() {
      const table = document.querySelector('#portfolioTable tbody');
      const valueEl = document.getElementById('portfolioValue');
      table.innerHTML = '';

      marketData.forEach(stock => {
        const shares = user.getShares(stock.symbol);
        if (shares > 0) {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${stock.symbol}</td>
            <td>${shares}</td>
            <td>$${(stock.price * shares).toFixed(2)}</td>
          `;
          table.appendChild(row);
        }
      });

      valueEl.textContent = user.totalValue(marketData);
    }

    function buyStock(symbol) {
      const stock = marketData.find(s => s.symbol === symbol);
      user.buy(stock.symbol, stock.price);
      renderPortfolioTable();
    }

    renderMarketTable();
    renderPortfolioTable();
  </script>
</body>
</html>
